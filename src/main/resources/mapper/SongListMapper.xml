<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.music.dao.SongListMapper" >
  <resultMap id="BaseResultMap" type="com.example.music.domain.SongList" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="style" property="style" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.music.domain.SongList" extends="BaseResultMap" >
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, pic, style
  </sql>
  <sql id="Blob_Column_List" >
    introduction
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from song_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.music.domain.SongList" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into song_list (title, pic, style, 
      introduction)
    values (#{title,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{style,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.music.domain.SongList" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into song_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        title,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="style != null" >
        style,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="style != null" >
        #{style,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.music.domain.SongList" >
    update song_list
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="style != null" >
        style = #{style,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.music.domain.SongList" >
    update song_list
    set title = #{title,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      style = #{style,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.music.domain.SongList" >
    update song_list
    set title = #{title,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      style = #{style,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>